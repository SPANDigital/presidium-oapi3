name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

env:
  FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true
  GO111MODULE: on

jobs:
  call-ci-checks:
    uses: ./.github/workflows/lint-and-format-on-push.yml

  tag-code:
    name: Tag Code
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    needs: call-ci-checks
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.x'
          cache: true
      - name: Tag Code
        if: "!contains(github.event.head_commit.message, '[NPM version]')"
        run: ./build/ci/tag_code.sh

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: call-ci-checks
    if: startsWith(github.ref, 'refs/tags/v')
    outputs:
      version: ${{ steps.create-release.outputs.version }}
    permissions:
      id-token: write
      issues: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create Release
        id: create-release
        uses: SPANDigital/span-github-actions/.github/actions/create-release@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Tag Format
        run: |
          if [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag matches required format"
          else
            echo "Tag does not match required format"
            exit 1
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [release]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.x'
          cache: true
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
      - name: Cleanup Tags
        if: success()
        run: ./build/ci/tags_cleanup.sh

  npm-publish:
    name: NPM Package Publish to GitHub
    runs-on: ubuntu-latest
    needs: [ release, build ]
    if: startsWith(github.ref, 'refs/tags/v') && needs.build.result == 'success'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@SPANDigital'
      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}