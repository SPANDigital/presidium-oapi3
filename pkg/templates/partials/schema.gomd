{{- define "schema"}}
    {{- $ref := .SchemaRef.Ref }}
    {{- $schema := .SchemaRef.Value }}
    {{- $presidiumRefURL := .PresidiumRefURL }}
    {{- $name := .Name }}
    {{- /* If this schema is a reference */ -}}
    {{- if not $ref }}

        {{- if and $schema $schema.Description }} **Description:** <br> {{ $schema.Description }} <br> {{ end }}

        {{ if $schema.Type }}
            {{- if and $schema $schema.Type }} **Type:** {{ $schema.Type }} <br> {{ end -}} {{- if $schema.ReadOnly }} **Read Only** <br> {{- end -}} {{- if $schema.Nullable }} **Nullable** <br> {{- end -}}

            {{ template "restrictions" $schema }}
        {{- end -}}

        {{ if $schema.Properties }}

            **Properties:**

            {{ template "properties" dict "Schema" $schema "PresidiumRefURL" $presidiumRefURL "RootName" $name }}

            {{ template "inlineProperties" dict "Schema" $schema "PresidiumRefURL" $presidiumRefURL "RootName" $name }}

        {{ end }}

        {{ template "printCuantifiers" dict "Schema" $schema "PresidiumRefURL" $presidiumRefURL "RootName" $name "Name" $name }}

    {{- end }}
{{- end -}}

{{- define "properties" }}

    {{ $required := .Schema.Required }}
    {{ $url := .PresidiumRefURL }}
    {{ $rootName := .RootName }}
    | Name | Type | Description | Restrictions |
    |------|------|-------------|--------------|
    {{- range $name, $property := .Schema.Properties }}
        {{- $value := $property.Value }}
        {{- $theRef := $property.Ref }}
        | {{ $name -}}
        |   {{- if and (not $theRef) (eq $value.Type "object") $value.Properties -}}
                [{{$name}}]({{"{{site.baseurl}}"}}{{$url}}/components/schemas/#{{- template "rootName" $rootName }}-{{ lower $name }})
            {{- else }}
                {{- template "schemaType" dict "Property" $property "Name" $name "RootName" $rootName "PresidiumRefURL" $url -}}
                {{- if (inStringSlice $required $name) }} <br> **Required** {{- end -}}
                {{- if $value.ReadOnly }} <br> **Read Only** {{- end -}}
                {{- if $value.Nullable }} <br> **Nullable** {{- end -}}
            {{- end -}}
        | {{ if $value.Description }} {{ toHTMLNewLines $value.Description }} {{ end -}}
        | {{ template "restrictions" $value }} |
    {{- end -}}
{{- end -}}

{{- define "inlineProperties" }}

    {{ $required := .Schema.Required }}
    {{ $url := .PresidiumRefURL }}
    {{ $rootName := .RootName }}

    {{ $url }}

    {{- range $name, $property := .Schema.Properties }}
        {{- $ref := .Ref }}
        {{- $value := .Value }}

        {{- if and (not $ref) (eq $value.Type "object") $value.Properties }}
            ## {{ $name }}
            {: #{{- template "rootName" $rootName }}-{{ lower $name }} }
            {{ template "schema" dict "SchemaRef" $property "Name" $name "PresidiumRefURL" $url }}
        {{- end -}}
    {{- end -}}

    {{- range $name, $property := .Schema.Properties }}
        {{- $ref := .Ref }}
        {{- $value := .Value }}
        {{ if and (or $value.AllOf $value.AnyOf $value.OneOf) (not $ref) }}
            ## {{ $name }}
            {: #{{- template "rootName" $rootName }}-{{ lower $name }} }

            {{ if $value.Description }} {{ toHTMLNewLines $value.Description }} {{ end -}}

            {{ template "printCuantifiers" dict "Schema" $value "PresidiumRefURL" $url "RootName" $rootName "Name" $name }}
        {{ end }}
    {{- end -}}
{{- end -}}

{{- define "printCuantifiers" }}
    {{ $schema := .Schema}}
    {{ $presidiumRefURL := .PresidiumRefURL }}
    {{ $name := .Name }}
    {{ $rootName := .RootName }}
    {{ if $schema.OneOf }}
    **One Of:**
    {{ template "cuantifiers" dict "Schemas" $schema.OneOf "PresidiumRefURL" $presidiumRefURL "RootName" $rootName "Name" $name }}
    {{ end }}

    {{ if $schema.AllOf }}
    **All Of:**
    {{ template "cuantifiers" dict "Schemas" $schema.AllOf "PresidiumRefURL" $presidiumRefURL "RootName" $rootName "Name" $name }}
    {{ end }}

    {{ if $schema.AnyOf }}
    **Any Of:**
    {{ template "cuantifiers" dict "Schemas" $schema.AnyOf "PresidiumRefURL" $presidiumRefURL "RootName" $rootName "Name" $name }}
    {{ end }}
{{- end -}}

{{- define "cuantifiers" }}

    {{ $url := .PresidiumRefURL }}
    {{ $rootName := .RootName }}
    {{ $name := .Name }}
    | Type | Description | Restrictions |
    |------|-------------|--------------|
    {{- range $idx, $property := .Schemas }}
        {{- $inlineCount := 1}}
        {{- $value := $property.Value }}
        {{- $theRef := $property.Ref }}
        |   {{- if and (not $theRef) (eq $value.Type "object") $value.Properties -}}
                [Inline Schema {{$inlineCount}}]({{"{{site.baseurl}}"}}{{$url}}/components/schemas/#{{- template "rootName" $rootName }}-{{lower $name}}-inline-schema-{{$inlineCount}})
                {{- $inlineCount = sum $inlineCount 1 }}
            {{- else }}
                {{- template "schemaType" dict "Property" $property "Name" $name "RootName" $rootName "PresidiumRefURL" $url -}}
            {{- end -}}
        | {{ if $value.Description }} {{ toHTMLNewLines $value.Description }} {{ end -}}
        | {{ template "restrictions" $value }} |
    {{- end -}}

    {{- range $idx, $property := .Schemas }}
        {{- $inlineCount := 1}}
        {{- $ref := .Ref }}
        {{- $value := .Value }}

        {{- if and (not $ref) (eq $value.Type "object") $value.Properties }}

            ### Inline Schema {{ $inlineCount }}
            {: #{{- template "rootName" $rootName }}-{{lower $name}}-inline-schema-{{$inlineCount}} }
            {{ template "schema" dict "SchemaRef" $property "Name" $rootName "PresidiumRefURL" $url }}
        {{- end -}}
    {{- end -}}
{{- end -}}

{{- /* schemaType Template */ -}}
{{- define "schemaType" }}
    {{- $ref := .Property.Ref }}
    {{- $schema := .Property.Value }}
    {{- $name := .Name }}
    {{- $rootName := .RootName }}
    {{- $url := .PresidiumRefURL }}
    {{- if $ref }}

        {{- schemaLink $ref }}

    {{- else if $schema }}
        {{- if eq $schema.Type "array" -}}
            [{{- template "schemaType" dict "Property" $schema.Items "Name" $name -}}]
        {{- else if not $schema.Type -}}
            [{{$name}}]({{"{{site.baseurl}}"}}{{$url}}/components/schemas/#{{- template "rootName" $rootName }}-{{lower $name}})
        {{- else }}
            {{- $schema.Type }} {{- if $schema.Format }} ({{$schema.Format}}) {{end}}
        {{- end }}
    {{- end}}
{{- end }}
{{- /* End of schemaType Template */ -}}

{{- /* restrictions template */ -}}
{{- define "restrictions" -}}
{{- /* Render all restrictions */ -}}
    {{- if .MultipleOf }} **Multiple of**: {{ .MultipleOf }} <br> {{- end -}}
    {{- if .Max }} **Maximum**: {{ .Max }} <br> {{- end -}}
    {{- if .ExclusiveMax }} **Exclusive maximum**: true <br> {{- end -}}
    {{- if .Min }} **Minimum**: {{ .Min }} <br> {{- end -}}
    {{- if .ExclusiveMin }} **Exclusive minimum**: true <br> {{- end -}}
    {{- if .MaxLength }} **Maximum length**: {{ .MaxLength }} <br> {{- end -}}
    {{- if .MinLength }} **Minimum length**: {{ .MinLength }} <br> {{- end -}}
    {{- if .Pattern }} **Pattern**: {{ .Pattern }} <br> {{- end -}}
    {{- if .MaxItems }} **Maximum items**: {{ .MaxItems }} <br> {{- end -}}
    {{- if .MinItems }} **Minimum items**: {{ .MinItems }} <br> {{- end -}}
    {{- if .UniqueItems }} **UniqueItems**: true <br> {{- end -}}
    {{- if .MaxProps }} **Maximum properties**: {{ .MaxProps }} <br> {{- end -}}
    {{- if .MinProps }} **Minimum properties**: {{ .MinProps }} <br> {{- end -}}
    {{- if .AdditionalPropertiesAllowed }} **Additional properties allowed**: true <br> {{- end -}}
    {{- if gt (len .Enum) 0 -}}
        **Enum**:<br>
        {{- range $idx, $value := .Enum -}}
            {{- $value}}<br>
        {{- end -}}
    {{- end -}}
{{- end -}}
{{- /* End of restrictions template*/ -}}

{{- /* Render root name */ -}}
{{- define "rootName" }}
    {{- if . -}}
        {{- replace (lower .) "_" "-" -}}
    {{- end -}}
{{- end -}}
{{- /* Render root name */ -}}

{{- /* schemaType Template */ -}}
{{- define "operationSchemaType" }}
    {{- $ref := .Ref }}
    {{- $schema := .Value }}

    {{- if $ref }}
        {{- schemaLink $ref }}
    {{- else if $schema }}
        {{- if eq $schema.Type "array" -}}
            [{{- template "operationSchemaType" $schema.Items -}}]
        {{- else if not $schema.Type -}}
            {{ template "listCuantifiers" $schema }}
        {{- else }}
            {{- $schema.Type }} {{- if $schema.Format }} ({{$schema.Format}}) {{end}}
        {{- end }}
    {{- end}}
{{- end }}
{{- /* End of schemaType Template */ -}}

{{- define "listCuantifiers"}}
    {{- $schemas := .AllOf -}}
    {{- $op := "AllOf"}}
    {{- if .AnyOf }}
        {{- $schemas = .AnyOf -}}
        {{- $op = "AnyOf" }}
    {{- else if .OneOf }}
        {{- $schemas = .OneOf -}}
        {{- $op = "OneOf" -}}
    {{- end -}}

    **{{ $op }}:** <br>
    {{- range $idx, $schema := $schemas -}}
        {{- template "operationSchemaType" $schema -}}, <br>
    {{- end -}}
{{- end -}}
